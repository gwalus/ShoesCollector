<UserControl x:Class="DesktopUI.Views.ProductsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesing="http://materialdesigninxaml.net/winfx/xaml/themes"
             
             xmlns:converters="clr-namespace:DesktopUI.Converters"
             
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             Dialog:DialogParticipation.Register="{Binding}"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:DesktopUI.Views"
             xmlns:metroControls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:userControls="clr-namespace:DesktopUI.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:StringToDateTimeConverter x:Key="StringToDateTimeConverter"/>
        <converters:StringToCurrencyConverter x:Key="StringToCurrencyConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    </UserControl.Resources>

    <DockPanel Margin="0,0,10,0">
        <!--#region Menu -->
        <StackPanel DockPanel.Dock="Top">

            <Menu BorderThickness="0 0 0 1" 
                  BorderBrush="White"
                  Focusable="True">

                <MenuItem Header="Products">
                    <MenuItem Header="Get all" Command="{Binding GetProductsCommand}">
                        <MenuItem.Icon>
                            <materialDesing:PackIcon Kind="Package" HorizontalAlignment="Center"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="Only available" Command="{Binding GetProductsCommand}" CommandParameter="Available">
                        <MenuItem.Icon>
                            <materialDesing:PackIcon Kind="EventAvailable" HorizontalAlignment="Center"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="Only sold" Command="{Binding GetProductsCommand}" CommandParameter="Sold">
                        <MenuItem.Icon>
                            <materialDesing:PackIcon Kind="Sale" HorizontalAlignment="Center"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>

                <MenuItem Header="Action">
                    <MenuItem Header="Add"
                                  Command="{Binding ShowNewProductPanelCommand}">
                        <MenuItem.Icon>
                            <materialDesing:PackIcon Kind="Add" HorizontalAlignment="Center"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="Update"
                                  Command="{Binding ShowUpdatingProductPanelCommand}">
                        <MenuItem.Icon>
                            <materialDesing:PackIcon Kind="Update" HorizontalAlignment="Center"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>

                <!--<MenuItem Header="Test" Command="{Binding Test}">
                
            </MenuItem>-->
            </Menu>

            <!--<TextBox metroControls:TextBoxHelper.Watermark="Search by name..."
                     metroControls:TextBoxHelper.ClearTextButton="True"
                     Text="{Binding TextBoxSearch, UpdateSourceTrigger=PropertyChanged}"
                                   Visibility="{Binding Products, Converter={StaticResource NullToVisibilityConverter}}"
                                   Margin="10, 10"/>-->

            <userControls:SearchBarUserControl 
                Width="auto" 
                Visibility="{Binding Products, Converter={StaticResource NullToVisibilityConverter}}" 
                Margin="10, 10"/>

        </StackPanel>
        <!--#endregion-->

        <!--#region NewProduct-->
        <ScrollViewer DockPanel.Dock="Left"
                      VerticalScrollBarVisibility="Auto"
                      Visibility="{Binding AddProductPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <!--<userControls:AddProductUserControl DockPanel.Dock="Left"
                                                DataContext="{Binding AddProductViewModel}"/>-->
        </ScrollViewer>
        <!--#endregion-->

        <!--#region UpdateProduct-->
        <ScrollViewer DockPanel.Dock="Left" 
                      VerticalScrollBarVisibility="Auto"
                      Visibility="{Binding UpdatingProductPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <!--<userControls:UpdateProductUserControl DockPanel.Dock="Left"
                                                   DataContext="{Binding UpdateProductViewModel}"/>-->

        </ScrollViewer>
        <!--#endregion-->

        <!--#region Data-->
        <DataGrid ItemsSource="{Binding Products}"
                                  SelectedItem="{Binding SelectedProduct, Mode=TwoWay}"
                                  x:Name="ProductsDataGrid"
                                  Margin="20, 10" 
                                  AutoGenerateColumns="False"
                                  CanUserAddRows="False"
                                  CanUserDeleteRows="False"
                                  IsReadOnly="True">

            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Binding="{Binding Id}"/>
                <DataGridTextColumn Header="Brand" Binding="{Binding Brand}"/>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>

                <DataGridTemplateColumn Header="Code">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <Hyperlink Command="{Binding Path=DataContext.SearchProductInGoogleCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                           CommandParameter="{Binding}"
                                           ToolTip="Click to search in google">
                                    <TextBlock Text="{Binding Path=ProductCode}"/>
                                    
                                    <Hyperlink.Resources>
                                        <Style TargetType="Hyperlink">
                                            <Setter Property="Foreground" Value="SandyBrown"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="False">
                                                    <Setter Property="Foreground" Value="CadetBlue"/>        
                                                </Trigger>    
                                            </Style.Triggers>
                                        </Style>
                                    </Hyperlink.Resources>
                                    
                                </Hyperlink>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Color" Binding="{Binding Color}"/>
                <DataGridTextColumn Header="Size" Binding="{Binding Size}"/>
                <DataGridCheckBoxColumn Header="Box" Binding="{Binding Box}"/>
                <DataGridTextColumn Header="Source" Binding="{Binding Source}"/>
                <DataGridTextColumn Header="Purchase (date)" Binding="{Binding DateOfPurchase, Converter={StaticResource StringToDateTimeConverter}}"/>
                <DataGridTextColumn Header="Sale (date)" Binding="{Binding SaleDate, Converter={StaticResource StringToDateTimeConverter}}"/>
                <DataGridTextColumn Header="Purchase (price)" Binding="{Binding PurchasePrice, Converter={StaticResource StringToCurrencyConverter}}"/>
                <DataGridTextColumn Header="Sell (price)" Binding="{Binding SellingPrice, Converter={StaticResource StringToCurrencyConverter}}"/>
                <DataGridTextColumn Header="Ship (price)" Binding="{Binding ShippingPrice, Converter={StaticResource StringToCurrencyConverter}}"/>
                <DataGridTextColumn Header="Sell - Ship" Binding="{Binding PriceWithoutShipping, Converter={StaticResource StringToCurrencyConverter}}"/>
                <DataGridTextColumn Header="Profit" Binding="{Binding Profit, Converter={StaticResource StringToCurrencyConverter}, StringFormat='{}{0:F2}'}"/>
                <DataGridCheckBoxColumn Header="IsSold" Binding="{Binding IsSold}"/>
            </DataGrid.Columns>

            <behaviors:Interaction.Triggers>
                <behaviors:EventTrigger EventName="SelectedCellsChanged">
                    <behaviors:InvokeCommandAction Command="{Binding SelectedCellsChanged}"/>
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>

        </DataGrid>
        <!--#endregion-->
    </DockPanel>
</UserControl>
